<?php
namespace App\Http\Controllers\Api;
use App\Http\Controllers\Controller; use App\Models\Lecon; use Illuminate\Http\Request; use Illuminate\Http\JsonResponse; use Illuminate\Validation\Rule; use Illuminate\Support\Facades\Log;
class LeconController extends Controller {
    public function store(Request $request): JsonResponse { $validated = $request->validate(['num' => 'nullable|string|max:10', 'titre' => 'required|string|max:255', 'statut' => ['nullable', Rule::in(['torecord', 'editing', 'review', 'validated', 'redo'])], 'date_enregistrement' => 'nullable|date_format:Y-m-d', 'duree_min' => 'nullable|integer|min:0', 'commentaires' => 'nullable|string', 'chapitre_id' => 'required|integer|exists:chapitres,id']); try { $lecon = Lecon::create($validated); return response()->json($lecon, 201); } catch (\Exception $e) { Log::error("Err store Lecon: ".$e->getMessage()); return response()->json(['error'=>'Err création leçon.'], 500); } }
    public function show(Lecon $lecon): JsonResponse { try { $lecon->load(['chapitre:id,nom', 'chapitre.matiere:id,nom','chapitre.matiere.enseignantsResponsables:id,nom']); return response()->json($lecon); } catch (\Exception $e) { Log::error("Err show Lecon {$lecon->id}: ".$e->getMessage()); return response()->json(['error'=>'Err load leçon.'], 500); } }
    public function update(Request $request, Lecon $lecon): JsonResponse { $validated = $request->validate(['num' => 'sometimes|required|string|max:10', 'titre' => 'sometimes|required|string|max:255', 'statut' => ['sometimes','required', Rule::in(['torecord', 'editing', 'review', 'validated', 'redo'])], 'date_enregistrement' => 'nullable|date_format:Y-m-d', 'duree_min' => 'nullable|integer|min:0', 'commentaires' => 'nullable|string', 'chapitre_id' => 'sometimes|required|integer|exists:chapitres,id']); try { $lecon->fill($validated)->save(); $lecon->load(['chapitre:id,nom', 'chapitre.matiere:id,nom','chapitre.matiere.enseignantsResponsables:id,nom']); return response()->json($lecon); } catch (\Exception $e) { Log::error("Err update Lecon {$lecon->id}: ".$e->getMessage()); return response()->json(['error'=>'Err màj leçon.'], 500); } }
    public function destroy(Lecon $lecon): JsonResponse { try { $lecon->delete(); return response()->json(['message' => 'Leçon supprimée.'], 200); } catch (\Exception $e) { Log::error("Err destroy Lecon {$lecon->id}: ".$e->getMessage()); return response()->json(['error'=>'Err suppression leçon.'], 500); } }
}